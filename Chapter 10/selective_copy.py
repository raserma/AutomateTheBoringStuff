#!/usr/bin/env python3
# selective_copy.py - it walks through a folder tree, searches for files
# with a certain file extension (such as .pdf or .jpg) and copies these
# files from whatever location they are in to a new folder.
#
# Notes:
#   - generate_test_examples() function is not required by the exercise.
#   I added it to automate the creation of the test examples needed to
#   run the program.
#   - The examples files generated by the exercise are not committed to
#   the repo.

import pyinputplus as pyip
from pathlib import Path
import os, shutil


def create_new_folder(path):
    """Creates a new folder. Skipped if folder already exists"""
    try:
        os.makedirs(path)
        print('New folder created at:', path.absolute())
    except FileExistsError as err:
        print(f'Folder {path} already exists. Continuing')


def generates_source_examples(source, num_files, ext):
    """Creates a new folder with N files and 'ext' extension"""

    # Checks user's input
    path = Path(source).absolute()
    print('Source path selected:', path)
    if not path.exists():
        raise Exception('Path introduced doesn\'t exist. Aborting.')
    if not path.is_dir():
        raise Exception('Path introduced is not a directory. Aborting.')

    # Creates a new folder
    new_folder = 'source_examples'
    new_path = Path(source) / new_folder
    create_new_folder(new_path)

    # Generates 'num_files' with extension 'ext' in the new folder
    for i in range(num_files):
        filename = f'example{i}.{ext}'
        with open(new_path / filename, 'w'):
            print(f'New filename created: {new_path}/{filename}')

    print('Examples successfully created under:', new_path.absolute())
    return new_path


def copy_dest_examples(source, dest, ext):
    """Creates a new folder and copies the regex matched contents from source"""

    # Checking user's input
    path = Path(dest).absolute()
    print('Destination path selected:', path)
    if not path.exists():
        raise Exception('Path introduced doesn\'t exist. Aborting.')
    if not path.is_dir():
        raise Exception('Path introduced is not a directory. Aborting.')


    # Creates a new folder
    new_folder = 'dest_examples'
    new_path = Path(dest) / new_folder
    create_new_folder(new_path)

    for file in source.glob(f'*.{ext}'):
        shutil.copy(file, new_path)
        print(f'Copying {file} to {new_path}')

    print(f'All files with extension {ext} successfully copied.')


def main():
    # Example data - to change as desired
    ext = 'pdf'
    num_files = 10

    # Gets user's input and generates the example extensions
    print('Please, introduce an existing source path. Press . for current directory')
    source_path = pyip.inputFilepath()

    source_path = generates_source_examples(source_path, num_files, ext)
    print(source_path.absolute())

    print('Please, introduce an existing destination path. Press . for current directory')
    dest_path = pyip.inputFilepath()

    copy_dest_examples(source_path, dest_path, ext)


main()
